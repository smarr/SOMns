class OuterSends = ()(
  public class TestOuterBindings = ()(
    public class Sup = ()(
      protected baz = ( ^ 6 )
    )
    public class Inner = Sup ()(
      public test1 = (| bar | bar := 1. ^ outer TestOuterBindings bar )
      public test2 = (| bar | bar := 1. ^ outer Inner bar  )
      private bar = ( ^ 2 )
      public test3 = (| bar | bar := 4. ^ outer Inner baz )
    )
    private bar = ( ^ 3 )
    private baz = ( ^ 5 )
  )
  
  public class TestOuterSendLegalTargets = ()(
    public class R a: a b: b c: c = (
      | public a = a.
        public b = b.
        public c = c.
      |)()
    public class A = ()(
      public class C = ()(
        public foo = ( ^ R a: outer C bar b: outer A bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 1 )
      ) : (
        public foo = ( ^ R a: outer C bar b: outer A bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 2 )
      )
      public class D = ()(
        public foo = (^ R a: outer D bar b: outer A bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 3 )
      ) : (
        public foo = ( ^ R a: outer D bar b: outer A bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 4 )
      )
      public foo = ( ^ R a: outer A bar b: outer TestOuterSendLegalTargets bar c: nil )
      public bar = ( ^ 5 )
    ) : (
      public foo = ( ^ R a: outer A bar b: outer TestOuterSendLegalTargets bar c: nil )
      public bar = ( ^ 6 )
    )
    public class B = ()(
      public class C = ()(
        public foo = ( ^ R a: outer C bar b: outer B bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 7 )
      ) : (
        public foo = ( ^ R a: outer C bar b: outer B bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 8 )
      )
      public class D = ()(
        public foo = ( ^ R a: outer D bar b: outer B bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 9 )
      ) : (
        public foo = ( ^ R a: outer D bar b: outer B bar c: outer TestOuterSendLegalTargets bar )
        public bar = ( ^ 10 )
      )
      public foo = ( ^ R a: outer B bar b: outer TestOuterSendLegalTargets bar c: nil )
      public bar = ( ^ 11 )
    ) : (
      public foo = ( ^ R a: outer B bar b: outer TestOuterSendLegalTargets bar c: nil )
      public bar = ( ^ 12 )
    )
    public foo = ( ^ R a: outer TestOuterSendLegalTargets bar b: nil c: nil )
    public bar = ( ^ 13 )
  )
) : (
  (* assert 3 *)
  public testOuterBindings1 = (
    ^ self new TestOuterBindings new Inner new test1
  )
  (* assert 2 *)
  public testOuterBindings2 = (
    ^ self new TestOuterBindings new Inner new test2
  )
  (* assert 6 *)
  public testOuterBindings3 = (
    ^ self new TestOuterBindings new Inner new test3
  )

  public testOuterSendLegalTargets = (
    | o r |
    o := self new TestOuterSendLegalTargets new.
    r := o A new C new foo.
    r a =  1 ifFalse: [ ^ #error ].
    r b =  5 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].
    
    r := o A new C foo.
    r a =  2 ifFalse: [ ^ #error ].
    r b =  5 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].
    
    r := o A new D new foo.
    r a =  3 ifFalse: [ ^ #error ].
    r b =  5 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].
    
    r := o A new D foo.
    r a =  4 ifFalse: [ ^ #error ].
    r b =  5 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].
    
    r := o A new foo.
    r a =  5 ifFalse: [ ^ #error ].
    r b = 13 ifFalse: [ ^ #error ].
    
    r := o A foo.
    r a =  6 ifFalse: [ ^ #error ].
    r b = 13 ifFalse: [ ^ #error ].
    
    r := o B new C new foo.
    r a =  7 ifFalse: [ ^ #error ].
    r b = 11 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].

    r := o B new C foo.
    r a =  8 ifFalse: [ ^ #error ].
    r b = 11 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].
    
    r := o B new D new foo.
    r a =  9 ifFalse: [ ^ #error ].
    r b = 11 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].
    
    r := o B new D foo.
    r a = 10 ifFalse: [ ^ #error ].
    r b = 11 ifFalse: [ ^ #error ].
    r c = 13 ifFalse: [ ^ #error ].
    
    r := o B new foo.
    r a = 11 ifFalse: [ ^ #error ].
    r b = 13 ifFalse: [ ^ #error ].

    r := o B foo.
    r a = 12 ifFalse: [ ^ #error ].
    r b = 13 ifFalse: [ ^ #error ].

    r := o foo.
    r a = 13 ifFalse: [ ^ #error ].
    
    ^ 666
  )
)
